import { IContact } from '../models/IContact';
export declare const contactAPI: import("@reduxjs/toolkit/dist/query/apiTypes").Api<import("@reduxjs/toolkit/dist/query/baseQueryTypes").BaseQueryFn<string | import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchArgs, unknown, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryError, {}, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryMeta>, {
    fetchAllContacts: import("@reduxjs/toolkit/dist/query/endpointDefinitions").QueryDefinition<IContact[], import("@reduxjs/toolkit/dist/query/baseQueryTypes").BaseQueryFn<string | import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchArgs, unknown, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryError, {}, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryMeta>, "Contact", IContact[], "contactAPI">;
    createContact: import("@reduxjs/toolkit/dist/query/endpointDefinitions").MutationDefinition<IContact, import("@reduxjs/toolkit/dist/query/baseQueryTypes").BaseQueryFn<string | import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchArgs, unknown, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryError, {}, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryMeta>, "Contact", IContact, "contactAPI">;
    updateContact: import("@reduxjs/toolkit/dist/query/endpointDefinitions").MutationDefinition<IContact, import("@reduxjs/toolkit/dist/query/baseQueryTypes").BaseQueryFn<string | import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchArgs, unknown, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryError, {}, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryMeta>, "Contact", IContact, "contactAPI">;
    deleteContact: import("@reduxjs/toolkit/dist/query/endpointDefinitions").MutationDefinition<IContact, import("@reduxjs/toolkit/dist/query/baseQueryTypes").BaseQueryFn<string | import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchArgs, unknown, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryError, {}, import("@reduxjs/toolkit/dist/query/fetchBaseQuery").FetchBaseQueryMeta>, "Contact", IContact, "contactAPI">;
}, "contactAPI", "Contact", typeof import("@reduxjs/toolkit/dist/query/core/module").coreModuleName | typeof import("@reduxjs/toolkit/dist/query/react/module").reactHooksModuleName>;
